import{_ as t,c as a,a2 as o,o as s}from"./chunks/framework.BQmytedh.js";const n="/assets/debug_settings.DRr2IADM.png",i="/assets/debug_display.OTqWPeHz.png",l="/assets/context_debug.Cbf-C2K_.png",c="/assets/lua_console.TgU8sUil.png",r="/assets/lua_examples.BPZDpkEy.png",w=JSON.parse('{"title":"Dev Tools (Cheats)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/scripting/cheat.md","filePath":"docs/scripting/cheat.md","lastUpdated":1714807325000}'),d={name:"docs/scripting/cheat.md"};function u(h,e,p,m,g,b){return s(),a("div",null,e[0]||(e[0]=[o('<h1 id="dev-tools-cheats" tabindex="-1">Dev Tools (Cheats) <a class="header-anchor" href="#dev-tools-cheats" aria-label="Permalink to &quot;Dev Tools (Cheats)&quot;">​</a></h1><p>Sapiens contains a few utillity tools to make modding easier (cheat), built automatically into the game. It is unknown if dave will remove these before launch!</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In latest versions, these cheat tools are not available without modifying the game. Check <code>scripts/common/gameConstants.lua</code>.</p></div><h2 id="debug-menu" tabindex="-1">Debug Menu <a class="header-anchor" href="#debug-menu" aria-label="Permalink to &quot;Debug Menu&quot;">​</a></h2><p>To access to the debug menu, you can select it from the settings tab:</p><p><img src="'+n+'" alt=""></p><p>It is suggested that you enabled the debug display checkbox, which will enable the two following additional displays.</p><h3 id="debug-display" tabindex="-1">Debug Display <a class="header-anchor" href="#debug-display" aria-label="Permalink to &quot;Debug Display&quot;">​</a></h3><p>The debug display shows in the top right corner of your screen, and is similar to the <code>F3</code> view in games like Minecraft. It will show your FPS, currently queued order totals, among other useful debug information.</p><p><img src="'+i+'" alt=""></p><h3 id="context-aware-debugging" tabindex="-1">Context Aware Debugging <a class="header-anchor" href="#context-aware-debugging" aria-label="Permalink to &quot;Context Aware Debugging&quot;">​</a></h3><p>The context aware debugger is a little &quot;debug&quot; button that will appear in the bottom left corner of your screen. It will allow you to perform a single &quot;debug&quot; action on the currently selected object.</p><p><img src="'+l+'" alt=""></p><p><strong>Note:</strong> For most objects, the debug button will do nothing. Only specific contexts have any functionality.</p><h2 id="lua-console" tabindex="-1">Lua Console <a class="header-anchor" href="#lua-console" aria-label="Permalink to &quot;Lua Console&quot;">​</a></h2><p>The Lua console can be summoned by pressing <code>c</code> to summon the chat window, then typing <code>/lua</code> to enter lua mode. This mode essentially allows you to execute lua code, although it does not store state between commands.</p><p>How to open console:</p><p><img src="'+c+'" alt=""></p><p>Some examples:</p><p><img src="'+r+'" alt=""></p><h2 id="lua-cheats" tabindex="-1">Lua Cheats <a class="header-anchor" href="#lua-cheats" aria-label="Permalink to &quot;Lua Cheats&quot;">​</a></h2><p>Once in lua mode, there are a few useful functions you might want to call:</p><h3 id="spawn" tabindex="-1">Spawn <a class="header-anchor" href="#spawn" aria-label="Permalink to &quot;Spawn&quot;">​</a></h3><ul><li>Format: <code>spawn(objectId)</code></li><li>Example: <code>spawn(&#39;mammoth&#39;)</code></li><li>Description: Spawns the object if it exists, and places it at your feet.</li></ul><h3 id="instant-build-mode" tabindex="-1">Instant Build Mode <a class="header-anchor" href="#instant-build-mode" aria-label="Permalink to &quot;Instant Build Mode&quot;">​</a></h3><ul><li>Format: <code>completeCheat()</code></li><li>Description: Enables instant build mode.</li></ul>',26)]))}const y=t(d,[["render",u]]);export{w as __pageData,y as default};
