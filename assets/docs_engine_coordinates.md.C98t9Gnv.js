import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.qL1yNBZ5.js";const g=JSON.parse('{"title":"Coordinates","description":"","frontmatter":{},"headers":[],"relativePath":"docs/engine/coordinates.md","filePath":"docs/engine/coordinates.md","lastUpdated":1714807325000}'),n={name:"docs/engine/coordinates.md"},t=e(`<h1 id="coordinates" tabindex="-1">Coordinates <a class="header-anchor" href="#coordinates" aria-label="Permalink to &quot;Coordinates&quot;">​</a></h1><p>In Sapiens, there are three coordinate systems: The first is used during world generation (pre-render), the second is used for rendering (render), and the third is used during normal gameplay (meters).</p><h2 id="pre-render-scale" tabindex="-1">Pre-render Scale <a class="header-anchor" href="#pre-render-scale" aria-label="Permalink to &quot;Pre-render Scale&quot;">​</a></h2><p>The world is a unit sphere, where sea level is <code>1.0</code> radius. The north pole is <code>0.0, 1.0, 00</code>. In pre-render, the coordinates are just 3D positions in that space.</p><h2 id="render-scale" tabindex="-1">Render Scale <a class="header-anchor" href="#render-scale" aria-label="Permalink to &quot;Render Scale&quot;">​</a></h2><p>The render scale is similar to pre-render, except that it&#39;s <strong>100,000</strong> times larger.</p><p>Alongside having it&#39;s own scale, the render coordinate systems is relative to a shifting origin point. This prevents floating point insanity, no matter where you are on such a large planet.</p><h2 id="meter-scale" tabindex="-1">Meter Scale <a class="header-anchor" href="#meter-scale" aria-label="Permalink to &quot;Meter Scale&quot;">​</a></h2><p>The meter scale is used during normal gameplay. Each side of a hex in sapiens is roughly 2 meters (although be aware of pole-distortion).</p><h2 id="conversions-and-constants" tabindex="-1">Conversions and Constants <a class="header-anchor" href="#conversions-and-constants" aria-label="Permalink to &quot;Conversions and Constants&quot;">​</a></h2><p>The <code>mj</code> global module contains a few methods for converting back and forth between the three coordinate systems. Here is a simplified version of the code:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RENDER_SCALE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100000.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WORLD_SIZE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8388608.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mToP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(meters)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	--- Converts meters to pre-render coordinates.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (meters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WORLD_SIZE)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mToR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(meters)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	--- Converts meters to render coordinates.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (meters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RENDER_SCALE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WORLD_SIZE)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rToM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(render)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	--- Converts render coordinates to meters.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (render </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WORLD_SIZE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RENDER_SCALE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pToM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(prerender)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	--- Converts pre-render coordinates to meters.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (prerender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WORLD_SIZE)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,12),r=[t];function h(l,p,k,d,o,c){return a(),i("div",null,r)}const y=s(n,[["render",h]]);export{g as __pageData,y as default};
