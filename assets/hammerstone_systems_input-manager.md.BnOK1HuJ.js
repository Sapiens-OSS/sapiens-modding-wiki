import{_ as i,c as l,o as a,a3 as s}from"./chunks/framework.COm4hYgr.js";const g=JSON.parse('{"title":"Input Manager","description":"","frontmatter":{},"headers":[],"relativePath":"hammerstone/systems/input-manager.md","filePath":"hammerstone/systems/input-manager.md","lastUpdated":1714807325000}'),e={name:"hammerstone/systems/input-manager.md"},t=s(`<h1 id="input-manager" tabindex="-1">Input Manager <a class="header-anchor" href="#input-manager" aria-label="Permalink to &quot;Input Manager&quot;">​</a></h1><p>The input manager provides an easy to use API for adding input binding to your mod.</p><h3 id="example-use-case" tabindex="-1">Example Use Case <a class="header-anchor" href="#example-use-case" aria-label="Permalink to &quot;Example Use Case&quot;">​</a></h3><p>Pressing <code>ctrl+p</code> to fast-forward time to the next day.</p><h3 id="including" tabindex="-1">Including <a class="header-anchor" href="#including" aria-label="Permalink to &quot;Including&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inputManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mjrequire</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hammerstone/input/inputManager&quot;</span></span></code></pre></div><h1 id="using-input-manager" tabindex="-1">Using Input Manager <a class="header-anchor" href="#using-input-manager" aria-label="Permalink to &quot;Using Input Manager&quot;">​</a></h1><p>The input system in Sapiens is fully rebindable, so we have to use strings to keep track of inputs. Input can also be grouped together.</p><h2 id="groups" tabindex="-1">Groups <a class="header-anchor" href="#groups" aria-label="Permalink to &quot;Groups&quot;">​</a></h2><p>The built in groups for Sapiens are as follows:</p><ul><li><code>menu</code>: Contains menu navigation controls</li><li><code>game</code>: Contains hotkeys for opening various in-game menus</li><li><code>movement</code>: Contains forward, backwards, left &amp; right, among other things</li><li><code>building</code>: Contains various building shortcuts &amp; hotkeys.</li><li><code>textEntry</code>: Contains keys like send and backspace.</li><li><code>multiSelect</code>: Contains the subtract modifier for multiselect.</li><li><code>debug</code>: Contains various debug controls</li><li><code>cinematicCamera</code>: Contains all the control for the cinematic camera</li></ul><p>When adding a key mapping, you have to use one of these groups:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inputManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;groupName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="adding-a-group" tabindex="-1">Adding a Group <a class="header-anchor" href="#adding-a-group" aria-label="Permalink to &quot;Adding a Group&quot;">​</a></h3><p>Hammerstone has support for adding a group like this:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inputManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;groupName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="key-codes-modifiers" tabindex="-1">Key Codes &amp; Modifiers <a class="header-anchor" href="#key-codes-modifiers" aria-label="Permalink to &quot;Key Codes &amp; Modifiers&quot;">​</a></h2><p>Sapiens uses key codes instead of strings to determine default keys. The keyCodes and modifiers can be accessed with:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyMapping </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mjrequire</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mainThread/keyMapping&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyCodes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyMapping.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keyCodes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modifiers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyMapping.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modifiers</span></span></code></pre></div><details class="details custom-block"><summary>Full list of all keycodes</summary><ul><li>backspace</li><li>tab</li><li>key_return</li><li>escape</li><li>space</li><li>exclaim</li><li>quotedbl</li><li>hash</li><li>dollar</li><li>percent</li><li>ampersand</li><li>quote</li><li>leftparen</li><li>rightparen</li><li>asterisk</li><li>plus</li><li>comma</li><li>minus</li><li>period</li><li>slash</li><li>key_0</li><li>key_1</li><li>key_2</li><li>key_3</li><li>key_4</li><li>key_5</li><li>key_6</li><li>key_7</li><li>key_8</li><li>key_9</li><li>colon</li><li>semicolon</li><li>less</li><li>equals</li><li>greater</li><li>question</li><li>at</li><li>leftbracket</li><li>backslash</li><li>rightbracket</li><li>caret</li><li>underscore</li><li>backquote</li><li>a</li><li>b</li><li>c</li><li>d</li><li>e</li><li>f</li><li>g</li><li>h</li><li>i</li><li>j</li><li>k</li><li>l</li><li>m</li><li>n</li><li>o</li><li>p</li><li>q</li><li>r</li><li>s</li><li>t</li><li>u</li><li>v</li><li>w</li><li>x</li><li>y</li><li>z</li><li>delete</li><li>capslock</li><li>f1</li><li>f2</li><li>f3</li><li>f4</li><li>f5</li><li>f6</li><li>f7</li><li>f8</li><li>f9</li><li>f10</li><li>f11</li><li>f12</li><li>printscreen</li><li>scrolllock</li><li>pause</li><li>insert</li><li>home</li><li>pageup</li><li>key_end</li><li>pagedown</li><li>right</li><li>left</li><li>down</li><li>up</li><li>numlockclear</li><li>kp_divide</li><li>kp_multiply</li><li>kp_minus</li><li>kp_plus</li><li>kp_enter</li><li>kp_1</li><li>kp_2</li><li>kp_3</li><li>kp_4</li><li>kp_5</li><li>kp_6</li><li>kp_7</li><li>kp_8</li><li>kp_9</li><li>kp_0</li><li>kp_period</li><li>application</li><li>power</li><li>kp_equals</li><li>f13</li><li>f14</li><li>f15</li><li>f16</li><li>f17</li><li>f18</li><li>f19</li><li>f20</li><li>f21</li><li>f22</li><li>f23</li><li>f24</li><li>execute</li><li>help</li><li>menu</li><li>select</li><li>stop</li><li>again</li><li>undo</li><li>cut</li><li>copy</li><li>paste</li><li>find</li><li>mute</li><li>volumeup</li><li>volumedown</li><li>kp_comma</li><li>kp_equalsas400</li><li>alterase</li><li>sysreq</li><li>cancel</li><li>clear</li><li>prior</li><li>return2</li><li>separator</li><li>out</li><li>oper</li><li>clearagain</li><li>crsel</li><li>exsel</li><li>kp_00</li><li>kp_000</li><li>thousandsseparator</li><li>decimalseparator</li><li>currencyunit</li><li>currencysubunit</li><li>kp_leftparen</li><li>kp_rightparen</li><li>kp_leftbrace</li><li>kp_rightbrace</li><li>kp_tab</li><li>kp_backspace</li><li>kp_a</li><li>kp_b</li><li>kp_c</li><li>kp_d</li><li>kp_e</li><li>kp_f</li><li>kp_xor</li><li>kp_power</li><li>kp_percent</li><li>kp_less</li><li>kp_greater</li><li>kp_ampersand</li><li>kp_dblampersand</li><li>kp_verticalbar</li><li>kp_dblverticalbar</li><li>kp_colon</li><li>kp_hash</li><li>kp_space</li><li>kp_at</li><li>kp_exclam</li><li>kp_memstore</li><li>kp_memrecall</li><li>kp_memclear</li><li>kp_memadd</li><li>kp_memsubtract</li><li>kp_memmultiply</li><li>kp_memdivide</li><li>kp_plusminus</li><li>kp_clear</li><li>kp_clearentry</li><li>kp_binary</li><li>kp_octal</li><li>kp_decimal</li><li>kp_hexadecimal</li><li>lctrl</li><li>lshift</li><li>lalt</li><li>lgui</li><li>rctrl</li><li>rshift</li><li>ralt</li><li>rgui</li><li>mode</li><li>audionext</li><li>audioprev</li><li>audiostop</li><li>audioplay</li><li>audiomute</li><li>mediaselect</li><li>www</li><li>mail</li><li>calculator</li><li>computer</li><li>ac_search</li><li>ac_home</li><li>ac_back</li><li>ac_forward</li><li>ac_stop</li><li>ac_refresh</li><li>ac_bookmarks</li><li>brightnessdown</li><li>brightnessup</li><li>displayswitch</li><li>kbdillumtoggle</li><li>kbdillumdown</li><li>kbdillumup</li><li>eject</li><li>sleep</li></ul></details><details class="details custom-block"><summary>Full list of modifiers</summary><ul><li>none (default)</li><li>shift</li><li>ctrl</li><li>alt</li><li>cmd (Windows key)</li></ul></details><h2 id="adding-a-mapping" tabindex="-1">Adding a mapping <a class="header-anchor" href="#adding-a-mapping" aria-label="Permalink to &quot;Adding a mapping&quot;">​</a></h2><p>The full process for adding a mapping is as follows. First, add the mapping:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inputManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;groupName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyBindName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, keyCodes.[default key], modifiers.[modifier] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then, bind a function to it:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inputManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addKeyChangedCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;groupName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyBindName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isDown, isRepeat)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   -- Do whatever you want</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Everything should be working now!</p>`,27),n=[t];function p(r,k,h,o,d,c){return a(),l("div",null,n)}const m=i(e,[["render",p]]);export{g as __pageData,m as default};
